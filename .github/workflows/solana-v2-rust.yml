name: Solana v2 Rust
on:
  pull_request:
    paths:
      - 'solana/program_v2/**'
      - 'solana/Cargo.toml'
      - 'solana/Cargo.lock'
jobs:
  solana-gateway-program-lint:
    name: Lint the solana rust code on ${{ matrix.rust }} and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ 'nightly-2022-03-22' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
          override: true

      - name: Cache build dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./solana/target
          key: cargo-lint-${{ hashFiles('solana/Cargo.lock') }}

      - name: Update dependencies
        uses: actions-rs/cargo@v1
        with:
          command: update
          args: --manifest-path solana/Cargo.toml

      - name: Run fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path solana/Cargo.toml --all -- --check

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --tests -p gateway_program_v2 --all-features --manifest-path solana/Cargo.toml -- --deny=warnings

  solana-gateway-program-v2-build:
    name: Build the v2 solana rust code on Solana ${{ matrix.solana }}, Rust ${{ matrix.rust }} and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [ 'nightly-2022-03-22' ]
        solana: [ 'stable' ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Cache build dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./solana/target
          key: cargo-build-v2-${{ hashFiles('solana/Cargo.lock') }}

      - name: Update dependencies
        uses: actions-rs/cargo@v1
        with:
          command: update
          args: --manifest-path solana/Cargo.toml

      - name: Cache Solana version
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ matrix.solana }}

      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/${{ matrix.solana }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Run unit tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path solana/Cargo.toml --features client -p gateway_program_v2

      - name: Build the program and run functional tests
        uses: actions-rs/cargo@v1
        with:
          command: build-bpf
          args: --manifest-path solana/Cargo.toml -- -p gateway_program_v2
